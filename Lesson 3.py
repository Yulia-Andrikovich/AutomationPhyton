# Операторы сравнения


# Оператор	                                                       Значение
# <	                                                Меньше. Условие верно, если первый операнд меньше второго.
# >	                                                Больше. Условие верно, если первый операнд больше второго.
# <=	                                 Меньше или равно. Условие верно, если первый операнд меньше либо равен второму.
# >=	                                 Больше или равно. Условие верно, если первый операнд больше либо равен второму.
# ==	                                 Равенство. Условие верно, если два операнда равны.
# !=	                                 Неравенство. Условие верно, если два операнда неравны.

# Логические операторы

# Оператор	                                                         Значение
# ~x	                                            Побитовое «НЕ»
# |	                                                Побитовое «ИЛИ»
# ^	                                                Побитовое «ИСКЛЮЧАЮЩЕЕ ИЛИ»
# &	                                                Побитовое «И»

# Оператор	 Смысл	                                Комментарий
# not	     Логическое «НЕ»	              Возвращает противоположное значение.
# or	     Логическое «ИЛИ»	              Возвращает True, если хотя бы одна из переменных True.
# and	      Логическое «И»	              Возвращает True, если обе переменные True.
# in, not in  Проверка принадлежности	      Возвращает True, если проверяемая переменная содержится/не содержится в
#                                             последовательности (списке, кортеже, строке...).
# is, is not	Проверка тождественности	  Возвращает True, если проверяемые объекты эквивалентны/не эквиваленты.
#                                             То есть переменные ссылаются на один и тот же адрес в памяти компьютера.

print(not True)
print(not False)

cond1 = 0 < 1
cond2 = 1 < 4
print(cond1 and cond2)

cond3 = 'k' in "kate"
cond4 = 'j' in "kate"
print(cond3 and cond4)

print(('k' in "kate") or ('t' in "kate"))

# Задача. Дана строка QWERTYUIOP. Определите, входит ли в него буква R.
print('R' in str('QWERTYUIOP'))

# Эквивалентность
a = [1, 2, 3]
print(id(a))

b = a
print(id(b))

print(a is b)

a = [1, 2, 3]
b = [1, 2, 3]
print(a == b)

print(a is b)

# Условный оператор
is_rainy = True  # дождь будет

if is_rainy:
    print("Возьми с собой зонт")
else:
    print("Не бери зонт")

# Обратите внимание на синтаксис

a = 2
b = 5
if b > 0:
    a = a + b
else:
    a = a - b
print(a)

is_rainy = True  # дождь будет
heavy_rain = False  # не сильный дождь
if is_rainy:  # дописываем ещё один условный оператор
    if heavy_rain:
        print("Возьми с собой зонт")
    else:
        print("Надень дождевик")
else:
    print("Не бери зонт")

# Исключения

# При делении на ноль                                                    ZeroDivisionError
# При невозможности привести один тип к другому	                         ValueError
# Если попытаться открыть несуществующий файл 	                         FileNotFoundError
# Недостаточно прав	                                                     PermissionError

# Список всех исключений вы можете найти по ссылке: https://docs.python.org/3/library/exceptions.html

# ведем в консоль  и посмотрим, какую ошибку нам выведет

100 / 0
2 + '1'

try:
    k = 100 / 0
except ZeroDivisionError:
    k = 0
print(k)

try:
    print("Давайте делить:")
    a = int(input("a: "))
    b = int(input("b: "))
    c = a / b
    print(c)  # выводим результат деления, если всё хорошо
except ZeroDivisionError as e:
    print("Нельзя делить на ноль")
else:  # код в блоке else выполняется только в том случае, если код в блоке try выполнился успешно
    # (т.е. не вылетело никакого исключения).
    print("Успех")
finally:  # код в блоке finally выполнится в любом случае при выходе из try-except
    print("Попробуем ещё?")
print("Спасибо за сотрудничество!")

age = int(input("How old are you?"))
if age > 100 or age <= 0:
    raise ValueError("Что-то ты путаешь")
print(f"Тебе {age} лет")  # Возраст выводится только в случае, если пользователь ввёл правильный возраст.

# Задача 1
a = int(input("a"))
if a % 2 == 0:
    print('Число А кратно 2')
if a % 3 == 0:
    print('Число А кратно 3')

a = int(input("a"))
if a % 2 == 0 or a % 3 == 0:
    print('Число А кратно 2 или 3')

# Задача 2
time_now = input('Сколько сейчас времени?')
if int(time_now) >= 6 and int(time_now) < 12:
    print("Доброе утро!")

time_now = input('Сколько сейчас времени?')
if 6 <= int(time_now) < 12:
    print("Доброе утро!")

# Конструкция if-elif-else
a = int(input('Введите число'))
if a == 5:
    print('число равно 5')
elif a < 5:
    print('число меньше 5')
else:
    print('число больше 5')

# Задача 3
month = int(input('Введите месяц'))
if month in [3, 4, 5]:
    print("Сейчас Весна")
elif month in [6, 7, 8]:
    print("Сейчас Лето")
elif month in [9, 10, 11]:
    print("Сейчас Осень")
elif month in [12, 1, 2]:
    print("Сейчас Зима")
else:
    print("такого месяца не существует")

# Функция range
print(list(range(5)))  # range(END);
print(list(range(1, 5)))  # range(START, END);
print(list(range(1, 10, 2)))  # range(START, END, STEP)

# Задача 4
sum1 = 0  # Объявляем переменную-счетчик, в которой будет считатьсяс сумма
N = 15

# применяем цикл for, который будет проходить по всем числам от одного до N
for i in range(1, N + 1):
    print("Значение суммы на предыдущем шаге: ", sum1)
    print("Текущее число: ", i)
    sum1 = sum1 + i  # cуммируем текущее число i и перезаписываем значение суммы
    print("Значение суммы после сложения: ", sum1)
    print("---")
print("Конец цикла")
print("Ответ: сумма равна = ", sum1)

# Цикл while
# Задача 5
sum2 = 0  # объявляем переменную-счетчик, в которой мы будем считать сумму
N = 1  # текущее натуральное число
# применяем цикл while, который будет работать, пока сумма не превысит 100
while sum2 < 100:
    sum2 = sum2 + N  # увеличиваем сумму
    N = N + 1  # перезаписываем текущее число
    print(sum2)
print("Сумма равна: ", sum2)

# Задача 6
a = int(input('Введите любое число'))
if type(a) == int:
    if 1 <= a <= 99:
        if a % 2 == 0:
            if a % 3 == 0:
                print("Это нужное число!")

a = int(input('Введите любое число'))
if all([type(a) == int,
        1 <= a <= 99,
        a % 2 == 0,
        a % 3 == 0]):
    print("Это нужное число!")
else:
    print("Попробуйте ещё раз")

# Домашнее задание:
# 1. Напишите программу, которая запрашивает два числа. Выведите их среднее геометрическое, или сообщение об ошибке,
# если это сделать невозможно

n_1 = int(input("Первое число: "))
n_2 = int(input("Второе число: "))
res = 0
try:
    res = math.sqrt(n_1 * n_2)  # sqrt сокращение от square root (квадратный корень)
    print(res)
except ValueError:
    print("Невозможно найти среднее геометрическое")


# 2. Напишите программу, которая будет подсчитывать общую стоимость купленных билетов, исходя из следующих условий.
# #
# a) Программа спрашивает у пользователя запрашивается количество билетов, которые он хочет купить.
#
# b) Для каждого билета пользователь должен ввести возраст посетителя.
#
# Если посетителю  меньше 18 лет, то билет будет бесплатным.
# От 18 до 25 лет — 100 руб.
# От 25 лет — полная стоимость 200 руб.
# c) При покупке больше 3 билетов пользователь получает скидку 10%
#  Программа должна вывести пользователю итоговую стоимость билетов.

ticket_num = int(input("How many tickets?:"))
total_price = 0
for i in range(ticket_num):
    age = int(input("What's your age?"))
    if 18 <= age < 25:
        total_price += 100
    elif age >= 25:
        total_price += 200

if ticket_num > 3:
    total_price *= 0.9

print("Total price: ", total_price)